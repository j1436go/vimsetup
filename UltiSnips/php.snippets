priority 10

snippet snFunc "Function without access modifier"
function ${1:name}(${2:$param}) {
	${3:return;}
}
endsnippet

snippet snPubfunc "Public function"
public function ${1:name}(${2:$param}) {
	return ${3};
}
endsnippet

snippet snPrivfunc "Private function"
private function ${1:name}(${2:$param}) {
	return ${3};
}
endsnippet

snippet snDd "var_dump"
var_dump(${1:$var});
exit;
endsnippet

snippet snPdo_script "PDP command-line script"
$opts = getopt(null, ['host:', 'user:', 'pw:', 'db:']);

function requiredOptsSupplied($opts) {
	return isset($opts['host']) &&
		isset($opts['user']) &&
		isset($opts['pw']) &&
		isset($opts['db']) &&
		isset($opts['file']);
}

if (!requiredOptsSupplied($opts)) {
	print "host, user, pw anb db arguments required.\n";
	print "Example:\n";
	print 'php import.php --db kreawi_online_portal --host="127.0.0.1" --pw mysql --user root';
	exit(1);
}

try {
	$dbh = new PDO('mysql:host='. $opts['host'] . ';dbname=' . $opts['db'], $opts['user'], $opts['pw'], array(PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES 'utf8'"));
} catch(Exception $e) {
	print "Unable to connect: " . $e->getMessage();
	exit(1);
}

try {
	$dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

	$dbh->beginTransaction();

	$ok = $dbh->exec('');

	$id = $dbh->lastInsertId();

	// so smth with id

	$dbh->commit();
} catch(Exception $e) {
	$dbh->rollback();
	print 'Insert failed: ' . $e->getMessage();
	exit(1);
}

print "All done.";
exit(0);
endsnippet
